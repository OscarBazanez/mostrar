{"version":3,"sources":["components/drawer.jsx","components/parametros.jsx","components/Navbar.jsx","App.js","index.js"],"names":["style","makeStyles","theme","drawer","width","flexShrink","drawerPaper","toolbar","mixins","DrawerNavbar","props","classes","Drawer","className","paper","variant","anchor","open","onClose","Divider","List","component","ListItem","ListItemText","useStyles","root","maxWidth","media","height","Parametros","useState","usuarios","setUsuarios","inputValue","setInputValue","objetoUser","setObjUser","useEffect","fetchData","a","fetch","data","json","users","Autocomplete","name","id","options","getOptionLabel","option","onChange","event","newValue","console","log","onInputChange","newInputValue","renderInput","params","TextField","label","ThemeProvider","Typography","Card","CardActionArea","CardMedia","image","title","CardContent","gutterBottom","color","JSON","stringify","address","username","CardActions","Button","size","website","phone","display","menuButton","marginRight","spacing","breakpoints","up","flexGrow","content","backgroundColor","palette","background","default","padding","AppBar","marginLeft","position","Navbar","abrir","setAbrir","accionAbrir","Toolbar","IconButton","edge","aria-label","onClick","Hidden","xsDown","smUp","App","ReactDOM","render","StrictMode","document","getElementById"],"mappings":"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","file":"static/js/main.0074191e.chunk.js","sourcesContent":["import React from 'react'\r\nimport { makeStyles } from '@material-ui/core/styles';\r\nimport {Drawer, Divider,List,ListItem, ListItemText} from '@material-ui/core'\r\nconst drawerWidth = 240\r\nconst style = makeStyles((theme) => ({\r\n    drawer: {\r\n        width: drawerWidth,\r\n        flexShrink: 0,\r\n    },\r\n    drawerPaper: {\r\n        width: drawerWidth,\r\n    },\r\n    toolbar: theme.mixins.toolbar,\r\n}));\r\n\r\n\r\nconst DrawerNavbar = (props) => {\r\n    const classes = style()\r\n    return(\r\n        <Drawer\r\n            className={classes.drawer}\r\n            classes={{\r\n              paper: classes.drawerPaper,\r\n            }}\r\n            variant={props.variant}\r\n            anchor=\"left\"\r\n            open={props.open}\r\n            onClose={props.onClose ? props.onClose : null}\r\n        >\r\n            <div className={classes.toolbar}></div>\r\n            <Divider />\r\n            <List component='nav'>\r\n                <ListItem>\r\n                    <ListItemText>Ir a lista</ListItemText>\r\n                </ListItem>\r\n            </List>\r\n        </Drawer>\r\n\r\n    )\r\n}\r\nexport default DrawerNavbar;\r\n","import React,{useState,useEffect} from 'react'\r\nimport {TextField,CardActionArea,Card,CardMedia,CardContent,Typography,CardActions,Button,ThemeProvider} from '@material-ui/core'\r\nimport Autocomplete from \"@material-ui/lab/Autocomplete\";\r\nimport { makeStyles } from '@material-ui/core/styles';\r\nconst useStyles = makeStyles({\r\n    root: {\r\n      maxWidth: 345,\r\n    },\r\n    media: {\r\n      height: 140,\r\n    },\r\n  });\r\nconst Parametros = () => {\r\n    const classes = useStyles();\r\n    const [usuarios, setUsuarios] = useState([])\r\n    const [inputValue, setInputValue] = useState('');\r\n    const [objetoUser, setObjUser] = useState(0);\r\n    useEffect(() => {\r\n        fetchData()\r\n    }, [])\r\n\r\n    const fetchData = async () => {\r\n        const data = await fetch('https://jsonplaceholder.typicode.com/users')\r\n        const users = await data.json()\r\n        //console.log(users)\r\n        setUsuarios(users)\r\n    }\r\n\r\n    return (\r\n        <div>\r\n            <Autocomplete\r\n            name=\"campo\"\r\n            id=\"combo-box-demo\"\r\n            options={usuarios}\r\n            getOptionLabel={option => option.name}\r\n            style={{ width: 300 }}\r\n            onChange={(event, newValue) => {\r\n                console.log(newValue)\r\n                //setUsuarios(newValue);\r\n                setObjUser(newValue);\r\n            }}\r\n            inputValue={inputValue}\r\n            onInputChange={(event, newInputValue) => {\r\n                console.log('valor input',newInputValue);\r\n                setInputValue(newInputValue);\r\n            }}\r\n            renderInput={params => (\r\n                <TextField {...params} label=\"Combo box\" variant=\"outlined\" />\r\n            )}\r\n            />\r\n            <ul>\r\n                {/*\r\n                    usuarios.map(item => (\r\n                        <li key={item.id}>\r\n                            <input type=\"text\" defaultValue={item.name} />\r\n                        </li>\r\n                    ))*/\r\n                }\r\n                \r\n            </ul>\r\n            {//JSON.stringify(inputValue)\r\n            }\r\n<ThemeProvider>\r\n  <Typography variant=\"h4\">Seleccionaste a</Typography>\r\n</ThemeProvider>\r\n<Card className={classes.root}>\r\n    <CardActionArea>\r\n      <CardMedia\r\n        className={classes.media}\r\n        image=\"http://lorempixel.com/500/500/people/\"\r\n        title=\"Contemplative Reptile\"\r\n      />\r\n      <CardContent>\r\n        <Typography gutterBottom variant=\"h5\" component=\"h2\">\r\n            {objetoUser.name}\r\n        </Typography>\r\n        <Typography variant=\"body2\" color=\"textSecondary\" component=\"p\">\r\n          Direccion:{JSON.stringify(objetoUser.address)}\r\n          Usuario:{objetoUser.username}\r\n        </Typography>\r\n        <Typography variant=\"body2\" color=\"textSecondary\" component=\"p\">\r\n          Usuario:{objetoUser.username}\r\n        </Typography>\r\n      </CardContent>\r\n    </CardActionArea>\r\n    <CardActions>\r\n      <Button size=\"small\" color=\"primary\">\r\n        WEB: {objetoUser.website}\r\n      </Button>\r\n      <Button size=\"small\" color=\"primary\">\r\n        Tel: {objetoUser.phone}\r\n      </Button>\r\n    </CardActions>\r\n</Card>\r\n            \r\n\r\n            <br></br><br></br><br></br>\r\n        </div>\r\n    )\r\n}\r\n\r\nexport default Parametros","import React,{useState} from 'react';\r\nimport {AppBar,Toolbar,IconButton,Typography,Button,Hidden} from '@material-ui/core'\r\nimport MenuIcon from '@material-ui/icons/Menu';\r\nimport { makeStyles } from '@material-ui/core/styles';\r\nimport DrawerNavbar from '../components/drawer'\r\nimport Parametros from './parametros'\r\nconst drawerWidth = 240\r\nconst useStyles = makeStyles((theme) => ({\r\n    root: {\r\n      display: 'flex'\r\n    },\r\n    menuButton: {\r\n      marginRight: theme.spacing(2),\r\n      [theme.breakpoints.up('md')]: {\r\n        display: 'none',\r\n      },\r\n    },\r\n    title: {\r\n      flexGrow: 1,\r\n    },\r\n    toolbar: theme.mixins.toolbar,\r\n    content: {\r\n        backgroundColor: theme.palette.background.default,\r\n        padding: theme.spacing(3),\r\n        flexGrow: 1,\r\n    },\r\n    AppBar:{\r\n        [theme.breakpoints.up('sm')]: {\r\n            width: `calc(100% - ${drawerWidth}px)`,\r\n            marginLeft: drawerWidth,\r\n            position: 'fixed'\r\n          },\r\n    }\r\n\r\n  }));\r\nconst Navbar = () =>{\r\n    const classes = useStyles();\r\n    const [abrir,setAbrir] = useState(false)\r\n    const accionAbrir = () =>{\r\n        setAbrir(!abrir)\r\n    }\r\n    return(\r\n        <>\r\n        <div className={classes.root}>\r\n            <AppBar className={classes.AppBar}>\r\n                <Toolbar>\r\n                    <IconButton edge=\"start\" className={classes.menuButton} color=\"inherit\" aria-label=\"menu\" onClick={() => { accionAbrir() }}>\r\n                    <MenuIcon />\r\n                    </IconButton>\r\n                    <Typography variant=\"h6\" className={classes.title}>\r\n                        News\r\n                    </Typography>\r\n                    <Button color=\"inherit\">Login</Button>\r\n                </Toolbar>\r\n            </AppBar>\r\n            <Hidden xsDown>\r\n                <DrawerNavbar \r\n                    variant=\"permanent\"\r\n                    open={true}\r\n                />\r\n            </Hidden>\r\n            <Hidden smUp>\r\n                <DrawerNavbar \r\n                    variant=\"temporary\"\r\n                    open={abrir}\r\n                    onClose={accionAbrir}\r\n                />\r\n            </Hidden>\r\n            <div className={classes.content}>\r\n                <div className={classes.toolbar}></div>\r\n                dasdasdadasdas das \r\n                <Parametros />\r\n            </div>\r\n        </div>\r\n\r\n        </>\r\n    )\r\n}\r\n\r\nexport default Navbar","import React from 'react';\nimport Navbar from './components/Navbar'\nconst App = () => {\n  return (\n    <>\n      <Navbar />\n    </>\n  );\n}\n\nexport default App;\n","import React from 'react';\nimport ReactDOM from 'react-dom';\nimport App from './App';\n\nReactDOM.render(\n  <React.StrictMode>\n    <App />\n  </React.StrictMode>,\n  document.getElementById('root')\n);\n\n// If you want your app to work offline and load faster, you can change\n// unregister() to register() below. Note this comes with some pitfalls.\n// Learn more about service workers: https://bit.ly/CRA-PWA\n"],"sourceRoot":""}